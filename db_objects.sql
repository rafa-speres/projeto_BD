---------------------------------------------------
-- Proejto Final - Laboratorio de Bases de Dados --
---------------------------------------------------

------------------------------------------------------
-- Scripts para Criação de Objetos na Base de Dados --
------------------------------------------------------


-- Tabela "USERS"
CREATE TABLE USERS (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    password VARCHAR2(64) NOT NULL,
    id_lider CHAR(14) NOT NULL,
    CONSTRAINT FK_USERS_LIDER FOREIGN KEY (id_lider) REFERENCES LIDER(CPI) ON DELETE CASCADE,
    CONSTRAINT UN_USERS_id_lider UNIQUE (id_lider)
);


-- Trigger para armazenar a senha de um USER utilizando a função MD5
CREATE OR REPLACE TRIGGER trg_hash_password
BEFORE INSERT OR UPDATE OF password
ON USERS
FOR EACH ROW
DECLARE
    v_hash_password VARCHAR2(64);
BEGIN
    SELECT STANDARD_HASH(:NEW.password, 'MD5') INTO v_hash_password FROM DUAL;
    :NEW.password := v_hash_password;
END;


-- Tabela "LOG_TABLE"
CREATE TABLE LOG_TABLE (
    user_id NUMBER NOT NULL,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    message VARCHAR2(1000),
    CONSTRAINT FK_LOG_TABLE_USERS FOREIGN KEY (user_id) REFERENCES USERS(user_id) ON DELETE CASCADE
);


-- Procedure para encontrar um Lider sem tupla na tabela USERS e inseri-lo com uma senha default
CREATE OR REPLACE PROCEDURE sp_cadastrar_lider_user AS
BEGIN
    FOR i IN (
        SELECT CPI 
        FROM LIDER
        WHERE CPI NOT IN (SELECT id_lider FROM USERS)
    ) LOOP
        INSERT INTO USERS (Password, id_lider)
        VALUES ('admin', i.CPI);
    END LOOP;
    
    COMMIT;
END;

-- Chamando a Procedure para cadastrar os líderes já existentes na base
BEGIN
    sp_cadastrar_lider_user;
END;



-- TODO: Criar trigger para inserir um registro automaticamente na tabela de USERS após uma inserção em LIDER
